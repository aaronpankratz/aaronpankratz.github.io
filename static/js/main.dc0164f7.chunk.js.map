{"version":3,"sources":["img/aaron.jpg","img/garden-2018.png","AboutMe.js","Articles.js","Garden.js","Ideas.js","Music.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AboutMe","react_default","a","createElement","className","src","aaron","alt","style","height","Component","Articles","href","Garden","garden","Ideas","Music","width","frameborder","allowtransparency","allow","scrolling","allowfullscreen","App","class","es","to","AboutMe_AboutMe","path","Articles_Articles","Garden_Garden","Ideas_Ideas","Music_Music","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8QCGnBC,mLAEb,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sEAEIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAOC,IAAI,QAAQC,MAAO,CAACC,OAAQ,WAC7CR,EAAAC,EAAAC,cAAA,uIATqBO,aCDhBC,mLAEb,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kDAGAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,yEAAR,6EAIJX,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,wEAAR,yDAdkBF,8BCCjBG,mLAEb,OACIZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sKAGAF,EAAAC,EAAAC,cAAA,kDAGAF,EAAAC,EAAAC,cAAA,OAAKE,IAAKS,IAAQP,IAAI,SAASC,MAAO,CAACC,OAAQ,mBAV3BC,aCDfK,mLAEb,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yMAGAF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,qTAKJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,kKAlBOO,aCAdM,mLAEb,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uEAGAF,EAAAC,EAAAC,cAAA,kFAGAF,EAAAC,EAAAC,cAAA,gFAGAF,EAAAC,EAAAC,cAAA,kFAGAF,EAAAC,EAAAC,cAAA,UAAQE,IAAI,+DAA+DY,MAAM,MAAMR,OAAO,MAAMS,YAAY,IAAIC,kBAAkB,OAAOC,MAAM,oBACnJnB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,OAAOR,OAAO,MAAMY,UAAU,KAAKH,YAAY,KAAKE,MAAM,WAAWf,IAAI,0NACvFJ,EAAAC,EAAAC,cAAA,UAAQc,MAAM,MAAMR,OAAO,MAAMJ,IAAI,4CAA4Ca,YAAY,IAAIE,MAAM,0EAA0EE,iBAAe,IAChMrB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,MAAMR,OAAO,MAAMJ,IAAI,4CAA4Ca,YAAY,IAAIE,MAAM,0EAA0EE,iBAAe,IAChMrB,EAAAC,EAAAC,cAAA,UAAQc,MAAM,MAAMR,OAAO,MAAMJ,IAAI,4CAA4Ca,YAAY,IAAIE,MAAM,0EAA0EE,iBAAe,YApB7KZ,aCOda,mLAEb,OACItB,EAAAC,EAAAC,cAAA,OAAKqB,MAAM,OACPvB,EAAAC,EAAAC,cAAA,OAAKqB,MAAM,OACPvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,KAAT,YADJ,KACmC,IAC/BzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,YAAT,YAFJ,KAE0C,IACtCzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,UAAT,UAHJ,KAGsC,IAClCzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAAT,SAJJ,KAIoC,IAChCzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAAT,WAGRzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACIxB,EAAAC,EAAAC,cAACwB,EAAD,CAASC,KAAK,MACd3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAUD,KAAK,cACf3B,EAAAC,EAAAC,cAAC2B,EAAD,CAAQF,KAAK,YACb3B,EAAAC,EAAAC,cAAC4B,EAAD,CAAOH,KAAK,WACZ3B,EAAAC,EAAAC,cAAC6B,EAAD,CAAOJ,KAAK,oBAlBClB,aCGbuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dc0164f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aaron.f3208e13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/garden-2018.8e39f46a.png\";","import React, { Component } from 'react';\nimport aaron from './img/aaron.jpg';\n\nexport default class AboutMe extends Component {\n    render() {\n        return (\n            <div>\n                <h3>\n                    Hi, my name is Aaron Pankratz. Welcome to my simple blog.\n                    <i className=\"fas fa-rocket\"/>\n                </h3>\n                <img src={aaron} alt=\"Aaron\" style={{height: '200px'}}/>\n                <p>\n                    My areas of interest include science, engineering, music, computer programming, botany, writing, and dog training.\n                </p>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport default class Articles extends Component {\n    render() {\n        return (\n            <div>\n                <h3>\n                    Here are some articles I've written.\n                </h3>\n                <h5>2019</h5>\n                <p>\n                    <a href=\"https://blog.goodtime.io/2019/07/3-decrease-turnover-helps-recruiter/\">\n                        3 Ways You Can Decrease Turnover (and How that Helps You as a Recruiter)\n                    </a>\n                </p>\n                <p>\n                    <a href=\"https://blog.goodtime.io/2019/04/3-questions-stop-asking-interviews/\">\n                        3 questions to stop asking during interviews\n                    </a>\n                </p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport garden from './img/garden-2018.png';\n\nexport default class Garden extends Component {\n    render() {\n        return (\n            <div>\n                <p>\n                    For me, gardening brings awareness of life. Watching my garden evolve over the years has made me a long term thinker and has brought me much inner peace.\n                </p>\n                <p>\n                    ‚ù§Ô∏è ‚úåÔ∏èüå±\n                </p>\n                <img src={garden} alt=\"Garden\" style={{height: '400px'}}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Ideas extends Component {\n    render() {\n        return (\n            <div>\n                <p>\n                I like ideas. Somtimes just sitting around and thinking can be fun. Some feel original but I believe that most of the time my ideas are a reflection of things I learn from my surroundings.\n                </p>\n                <p>\n                    <ul>\n                        <li>\n                            <h5>Sky Garden</h5>\n                            <p>I want to build a vertical garden that rivals a skyscraper in height. \n                                The garden should produce it's own energy and clean water. \n                                All crops should be cared for and harvested by robotic gardeners (maybe drones).\n                                The buildings utilities should be operated intelligently using software and hardware.</p>\n                        </li>\n                        <li>\n                            <h5>data driven reality tv</h5>\n                            <p>What if we created reality style entertainment that was derived from human digital interaction. Make story lines based from data analysis.</p>\n                        </li>\n                    </ul>\n                </p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Music extends Component {\n    render() {\n        return (\n            <div>\n                <p>\n                    Made with ‚ù§Ô∏è, and üíª in Austin, Texas.\n                </p>\n                <p>\n                    Aaron Pankratz üë®‚Äçüé§üé∏üé§\n                </p>\n                <p>\n                    Marcos Rocha üë®‚Äçüé§üé∏üé§\n                </p>\n                <p>\n                    Ariel Pankratz üë©‚Äçüé§üéπüé§\n                </p>\n                <iframe src=\"https://open.spotify.com/embed/artist/5nHNdJ4Owkzh98IPklwFYE\" width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                <iframe width=\"100%\" height=\"300\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/users/82977650&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"></iframe>\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/oUWCdShIn9M\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/8XW6mgWSHE8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YojyID8EYqA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Router, Link } from \"@reach/router\"\nimport AboutMe from './AboutMe';\nimport Articles from './Articles';\nimport Garden from './Garden';\nimport Ideas from './Ideas';\nimport Music from './Music';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div class=\"App\">\n                <div class=\"Nav\">\n                    <nav>\n                        <Link to=\"/\">About Me</Link> |{\" \"}\n                        <Link to=\"articles\">Articles</Link> |{\" \"}\n                        <Link to=\"garden\">Garden</Link> |{\" \"}\n                        <Link to=\"ideas\">Ideas</Link> |{\" \"}\n                        <Link to=\"music\">Music</Link>\n                    </nav>\n                </div>\n                <Router>\n                    <AboutMe path=\"/\" />\n                    <Articles path=\"/articles\"/>\n                    <Garden path=\"/garden\"/>\n                    <Ideas path=\"/ideas\"/>\n                    <Music path=\"/music\"/>\n                </Router>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}